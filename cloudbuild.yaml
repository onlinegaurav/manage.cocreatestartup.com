steps:
  # Step 1: Install dependencies
  - id: npm-ci
    name: 'gcr.io/cloud-builders/npm'
    args: ['ci']

  # Step 2: Run tests (TDD step)
  - id: npm-test
    name: 'gcr.io/cloud-builders/npm'
    args: ['test', '--', '--ci', '--watchAll=false']
    waitFor: ["npm-ci"]

  # Step 3: Build app
  - id: npm-build
    name: 'gcr.io/cloud-builders/npm'
    args: ['run', 'build']
    waitFor: ["npm-test"]

  # Step 4: Sync to GCS bucket (only changed files, with correct MIME)
  - id: sync-to-gcs
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - -c
      - |
        gsutil -m rsync -r -c build/ gs://manage.cocreatestartup.com
        # Ensure correct cache-control and MIME types
        gsutil -m setmeta -h "Cache-Control:no-cache" gs://manage.cocreatestartup.com/static/js/** || true
        gsutil -m setmeta -h "Cache-Control:no-cache" gs://manage.cocreatestartup.com/static/css/** || true

  # Step 5: Set GCS bucket website config (important for React routing)
  - id: set-website-config
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    args: ['gsutil', 'web', 'set', '-m', 'index.html', '-e', 'index.html', 'gs://manage.cocreatestartup.com']
    waitFor: ["sync-to-gcs"]

  # Step 6: Invalidate CDN cache
  - id: invalidate-cdn
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    args:  ['gcloud', 'compute', 'url-maps', 'invalidate-cdn-cache', 'cocreate-map', '--path', '/*l']
    waitFor: ["set-website-config"]

timeout: "900s"

options:
  logging: CLOUD_LOGGING_ONLY
