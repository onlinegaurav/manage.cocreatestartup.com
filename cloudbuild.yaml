steps:
  - id: npm-ci
    name: 'gcr.io/cloud-builders/npm'
    args: ['ci']

  - id: npm-test
    name: 'gcr.io/cloud-builders/npm'
    args: ['test', '--', '--ci', '--watchAll=false']
    waitFor: ["npm-ci"]

  - id: npm-build
    name: 'gcr.io/cloud-builders/npm'
    args: ['run', 'build']
    waitFor: ["npm-test"]

  - id: sync-to-gcs
    name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - -c
      - |
        echo "Syncing build/ to bucket..."
        gsutil -m rsync -r -c build/ gs://manage.cocreatestartup.com
    waitFor: ["npm-build"]

  # Step 4: Invalidate CDN cache
  - id: invalidate-cdn
    name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: bash
    secretEnv: ["cf_api_token"]
    args:
      - -c
      - |
        curl -X POST "https://api.cloudflare.com/client/v4/zones/${_CF_ZONE_ID}/purge_cache" \
             -H "Authorization: Bearer $cf_api_token" \
             -H "Content-Type: application/json" \
             --data '{"files":["https://manage.cocreatestartup.com/index.html"]}'
    waitFor: ["sync-to-gcs"]

availableSecrets:
  secretManager:
    - versionName: projects/${PROJECT_ID}/secrets/cloudflare_api_token/versions/latest
      env: cf_api_token

substitutions:
  _CF_ZONE_ID: "2472ab8aa0c2961504b176875e966624"

timeout: "900s"

options:
  logging: CLOUD_LOGGING_ONLY
