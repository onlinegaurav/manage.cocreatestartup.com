steps:
  - id: npm-ci
    name: 'gcr.io/cloud-builders/npm'
    args: ['ci']

  - id: npm-test
    name: 'gcr.io/cloud-builders/npm'
    args: ['test', '--', '--ci', '--watchAll=false']
    waitFor: ["npm-ci"]

  - id: npm-build
    name: 'gcr.io/cloud-builders/npm'
    args: ['run', 'build']
    waitFor: ["npm-test"]

  - id: sync-to-gcs
    name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - -c
      - |
        echo "Syncing build/ to bucket..."
        gsutil -m rsync -r -c build/ gs://manage.cocreatestartup.com
    waitFor: ["npm-build"]

  - id: invalidate-cdn
    name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - -c
      - |
        echo "Invalidating CDN cache using Compute Engine API..."
        access_token=$(gcloud auth print-access-token)
        project_id=$(gcloud config get-value project)
        url_map_name="cocreate-map"
        curl -X POST \
          -H "Authorization: Bearer $access_token" \
          -H "Content-Type: application/json" \
          -d '{"path": "/*"}' \
          "https://compute.googleapis.com/compute/v1/projects/$project_id/global/urlMaps/$url_map_name/invalidateCache"
    waitFor: ["sync-to-gcs"]

timeout: "900s"

options:
  logging: CLOUD_LOGGING_ONLY
