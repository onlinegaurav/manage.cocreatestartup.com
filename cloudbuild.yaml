steps:
  # Step 1: Install dependencies
  - id: npm-ci
    name: 'gcr.io/cloud-builders/npm'
    args: ['ci']

  # Step 2: Run tests
  - id: npm-test
    name: 'gcr.io/cloud-builders/npm'
    args: ['test', '--', '--ci', '--watchAll=false']
    waitFor: ["npm-ci"]

  # Step 3: Patch package.json homepage before build
  - id: patch-homepage
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - -c
      - |
        echo "Patching package.json homepage..."
        sed -i 's#"homepage":.*#"homepage": "https://manage.cocreatestartup.com",#' package.json || \
        (jq '.homepage="https://manage.cocreatestartup.com"' package.json > package.tmp.json && mv package.tmp.json package.json)

  # Step 4: Build app
  - id: npm-build
    name: 'gcr.io/cloud-builders/npm'
    args: ['run', 'build']
    waitFor: ["npm-test", "patch-homepage"]

  # Step 5: Sync to GCS bucket (with correct metadata)
  - id: sync-to-gcs
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - -c
      - |
        echo "Syncing build/ to bucket..."
        gcloud storage rsync --recursive build gs://manage.cocreatestartup.com --delete-unmatched-destination-objects
        echo "Setting cache control..."
        gcloud storage objects update gs://manage.cocreatestartup.com/static/js/* --cache-control="no-cache" || true
        gcloud storage objects update gs://manage.cocreatestartup.com/static/css/* --cache-control="no-cache" || true

  # Step 6: Set GCS website config
  - id: set-website-config
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    args:
      [
        'gcloud', 'storage', 'buckets', 'update',
        'gs://manage.cocreatestartup.com',
        '--web-main-page-suffix=index.html',
        '--web-error-page=index.html'
      ]
    waitFor: ["sync-to-gcs"]

  # Step 7: Invalidate CDN cache
  - id: invalidate-cdn
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    args:
      ['gcloud', 'compute', 'url-maps', 'invalidate-cdn-cache', 'cocreate-map', '--path', '/*']
    waitFor: ["set-website-config"]

timeout: "900s"

options:
  logging: CLOUD_LOGGING_ONLY
